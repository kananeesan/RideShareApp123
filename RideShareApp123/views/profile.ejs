<% include layout %>

<head>
    <title>Geolocation</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
      .controls {
        margin-top: 70px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
  
  #pac-input {
        
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 300px;
		    color: black;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      #target {
        width: 345px;
      }
    </style>

     
  </head>
 
    
    <input id="origin-input" class="controls" type="text"
        placeholder="Enter an origin location">

    <input id="destination-input" class="controls" type="text"
        placeholder="Enter a destination location">

   
  
  
    
    <div id="map"></div>
      
    <script>
      // This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuS8M5aXKNB8dVpWIqK9Opljm5iqKzbHA&libraries=places">

        function initAutocomplete() {
        
        var inputData = <%- JSON.stringify(data) %>;
        //var inputData1 = [{"v_id":5,"dr_name":"hiso","dr_ph_no":774586345,"reg_no":12345,"loc_longt":79.8605,"loc_lat":6.8747,"status":"available"},{"v_id":6,"dr_name":"dimuthu","dr_ph_no":771543176,"reg_no":12346,"loc_longt":79.8913,"loc_lat":6.7881,"status":"available"},{"v_id":7,"dr_name":"aravinth","dr_ph_no":771469722,"reg_no":12347,"loc_longt":79.8808,"loc_lat":6.9353,"status":"not availa"},{"v_id":8,"dr_name":"kaja","dr_ph_no":778986872,"reg_no":12348,"loc_longt":79.8789,"loc_lat":6.8836,"status":"available"}]

      var outputData = [];

        for(var i = 0; i < inputData.length; i++) {
          var input = inputData[i];

          outputData.push([input.v_id,input.dr_name,input.dr_ph_no,input.reg_no,input.loc_longt,input.loc_lat,input.status]);
        }
        
       alert(outputData);
       alert(inputData);
      
          var driverDetails = outputData;
          
        

          var map = new google.maps.Map(document.getElementById('map'), {

          zoom: 12,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          center: new google.maps.LatLng(6.8836, 79.8789)
          });

          
          /////////////////////////////////////////////////
          /////////////////////////////////////////////////
          /////////////////////find current location//////////////
          /////////////////////////////////////////////////


          var infoWindow = new google.maps.InfoWindow({map: map});

          // Try HTML5 geolocation.
          if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {



          var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
          };


          var x =0.002;
          var posInfo = {
          lat: position.coords.latitude+x,
          lng: position.coords.longitude
          };
        
          
          
          
          
          
          
          var marker = new google.maps.Marker({
          position: pos,
          map: map,

          });

          infoWindow.setPosition(posInfo);
          infoWindow.setContent('....You are here Now...<br>Name : <%= user.username %> <br>First Name : <%= user.lname %><br>Last Name : <%= user.fname %>');
			
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
      
		
		
		//////////////////////////////////////////////////
		/////////////////////////////////////////////////
    //////////////////////////////////////////////////////
		///////////////drivers marker///////////////////////////
		//////////////////////////////////////////////////////
		
		var infowindowdr = new google.maps.InfoWindow();

    var drivermarker, i;

    for (i = 0; i < driverDetails.length; i++) {  
      drivermarker = new google.maps.Marker({
        position: new google.maps.LatLng(driverDetails[i][5], driverDetails[i][4]),
        map: map
      });

      google.maps.event.addListener(drivermarker, 'click', (function(drivermarker, i) {
        return function() {
          infowindowdr.setContent("Driver Name : "+driverDetails[i][1]+"<br>Driver phone Number : "+driverDetails[i][2]
          +"<br> Driver Status : "+driverDetails[i][6] +"<br>"+"<button type='submit' class='btn btn-info btn-block'>Confirm</button>");
          infowindowdr.open(map, drivermarker);
        }
      })(drivermarker, i));
    }
		
		//////////////////////////////////////////////////
		/////////////////////////////////////////////////
    ////////////////direction //////////////////////////
    ///////////////////////////////////////////////
    
    
        var origin_place_id = null;
        var destination_place_id = null;
        var travel_mode = google.maps.TravelMode.DRIVING;
        
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        directionsDisplay.setMap(map);

        var origin_input = document.getElementById('origin-input');
        var destination_input = document.getElementById('destination-input');
        var modes = document.getElementById('mode-selector');

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(origin_input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(destination_input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(modes);

        var origin_autocomplete = new google.maps.places.Autocomplete(origin_input);
        origin_autocomplete.bindTo('bounds', map);
        var destination_autocomplete =
            new google.maps.places.Autocomplete(destination_input);
        destination_autocomplete.bindTo('bounds', map);

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        
      

        function expandViewportToFitPlace(map, place) {
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }
        }

        origin_autocomplete.addListener('place_changed', function() {
          var place = origin_autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
          }
          expandViewportToFitPlace(map, place);

          // If the place has a geometry, store its place ID and route if we have
          // the other place ID
          origin_place_id = place.place_id;
          route(origin_place_id, destination_place_id, travel_mode,
                directionsService, directionsDisplay);
        });

        destination_autocomplete.addListener('place_changed', function() {
          var place = destination_autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
          }
          expandViewportToFitPlace(map, place);

          // If the place has a geometry, store its place ID and route if we have
          // the other place ID
          destination_place_id = place.place_id;
          route(origin_place_id, destination_place_id, travel_mode,
                directionsService, directionsDisplay);
        });

        function route(origin_place_id, destination_place_id, travel_mode,
                       directionsService, directionsDisplay) {
          if (!origin_place_id || !destination_place_id) {
            return;
          }
          directionsService.route({
            origin: {'placeId': origin_place_id},
            destination: {'placeId': destination_place_id},
            travelMode: travel_mode
          }, function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
              directionsDisplay.setDirections(response);
            } else {
              window.alert('Directions request failed due to ' + status);
            }
          });
        }
}

    </script>
    
  <div class="col-sm-6 col-sm-offset-3">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuS8M5aXKNB8dVpWIqK9Opljm5iqKzbHA&libraries=places&callback=initAutocomplete"
         async defer></script>
    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-header">

        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="icon-bar"></span>
          <!-- sdjsjd -->
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">
          <%= user.username %> 
          </a>
        <br></br>
        <div class="col-sm-6 col-sm-offset-3">
        <div class="myCenter">
          
          
  
       
          
       </div>
        </div>
      </div>
      <div class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
          <li>
            <a href="/edit"><img src="../../images/edit.png"> &nbsp;&nbsp;Edit Profile</a>
          </li>
          <li>
            <a href="#history"><img src="../../images/history.png"> &nbsp;&nbsp; History</a>
          </li>
          <li>
            <a href="#setting"><img src="../../images/settings.png">  &nbsp;Setting</a>
          </li>
          <li>
            <a href="#help"><img src="../../images/help.png"> &nbsp;Help</a>
          </li>
         
          <li>
            <a href="#about"><img src="../../images/about.png">  &nbsp;&nbsp;About</a>
          </li>
          <li>
            <a href="/logout"><img src="../../images/logout.png"> &nbsp;&nbsp; Log out</a>
          </li>
        </ul>
          
      </div>
    </nav>
  </div>

      <script src="../../javascripts/client/clientConrtoller.js"></script>    
      




